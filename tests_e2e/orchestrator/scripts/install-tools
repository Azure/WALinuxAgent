#!/usr/bin/env bash

# Microsoft Azure Linux Agent
#
# Copyright 2018 Microsoft Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Installs the tools in ~/bin/scripts/* to ~/bin, as well as Pypy.
#
# It also makes Pypy the default python for the current user.
#

set -euo pipefail

PATH="$HOME/bin:$PATH"

#
# We need Python to boostrap the install process, but depending on the distro, it may not be in PATH,
# or it may be named 'python3' or 'python'.
#
find-python() {
    # python3 is available on most distros
    if which python3 2> /dev/null; then
      return 0
    fi

    # else try python
    if which python 2> /dev/null; then
      return 0
    fi

    # lastly, try some well-known locations
    declare -a known_locations=(
      "/usr/share/oem/python/bin/python"
    )
    for python in "${known_locations[@]}"
    do
        if [[ -e $python ]]; then
          echo "$python"
          return 0
        fi
    done

    echo "Can't find the python executable" >&2
    return 1
}

python=$(find-python)
echo "Python executable: $python"

#
# Install Pypy and Python modules used by the tests
#
# Note that bzip2/lbzip2 (used by tar to uncompress *.bz2 files) are not available by default in some distros;
# use Python to uncompress the Pypy tarball.
#
echo "Installing Pypy 3.7"
$python ~/bin/uncompress.py ~/tmp/pypy3.7-*.tar.bz2 ~/tmp/pypy3.7.tar
tar xf ~/tmp/pypy3.7.tar -C ~/bin
ln -s ~/bin/pypy*/bin/pypy3.7 ~/bin/pypy3

echo "Installing the 'distro' module to Pypy"
pypy3 -m ensurepip
pypy3 -mpip install -U pip wheel
pypy3 -mpip install distro

echo "Installing Agent modules to Pypy"
unzip.py ~/tmp/WALinuxAgent-*.zip ~/tmp/WALinuxAgent
unzip.py ~/tmp/WALinuxAgent/bin/WALinuxAgent-*.egg ~/tmp/WALinuxAgent/bin/WALinuxAgent.egg
mv ~/tmp/WALinuxAgent/bin/WALinuxAgent.egg/azurelinuxagent ~/bin/pypy*/site-packages

#
# Create ~/bin/set-agent-env to set PATH and PYTHONPATH.
#
# We append $HOME/bin to PATH and set PYTHONPATH to $HOME/lib (bin contains the scripts used by tests, while
# lib contains the Python libraries used by tests).
#
echo "Creating ~/bin/set-agent-env to set PATH and PYTHONPATH"

echo "
if [[ \$PATH != *\"$HOME/bin\"* ]]; then
   PATH=\"$HOME/bin:\$PATH:\"
fi

export PYTHONPATH=\"$HOME/lib\"
" > ~/bin/set-agent-env

chmod u+x ~/bin/set-agent-env

#
# Add ~/bin/set-agent-env to .bash_profile to simplify interactive debugging sessions
#
# Note that in some distros .bash_profile is a symbolic link to a read-only file. Make a copy in that case.
#
echo "Adding ~/bin/set-agent-env to ~/.bash_profile"
if test -e ~/.bash_profile && ls -l .bash_profile | grep '\->'; then
  cp ~/.bash_profile ~/.bash_profile-bk
  rm ~/.bash_profile
  mv ~/.bash_profile-bk ~/.bash_profile
fi
if ! test -e ~/.bash_profile || ! grep '~/bin/set-agent-env' ~/.bash_profile > /dev/null; then
  echo 'source ~/bin/set-agent-env
' >> ~/.bash_profile
fi


#else
#  # In some distros (e.g. Flatcar), Python is not in PATH; in that case create a symlink under ~/bin
#  if ! which python3 > /dev/null 2>&1; then
#    if [[ ! $python_version < "03.00" ]]; then
#      echo "Python ($python) is not in PATH; creating symbolic links as ~/bin/python and ~/bin/python3"
#      ln -s "$python" ~/bin/python
#      ln -s "$python" ~/bin/python3
#    fi
#  fi
#fi



