# variables:
  #
  # NOTE: When creating the pipeline, "connection_info" must be added as a variable pointing to the
  #       corresponding key vault; see wiki for details.
  #

parameters:
    # See the test wiki for a description of the parameters
  - name: test_suites
    displayName: Test Suites
    type: string
    default: agent_bvt

    # NOTES:
    #         * 'image', 'location' and 'vm_size' override any values in the test suites/images definition
    #            files. Those parameters are useful for 1-off tests, like testing a VHD or checking if
    #            an image is supported in a particular location.
    #         * Azure Pipelines do not allow empty string for the parameter value, using "-" instead.
    #
  - name: image
    displayName: Image (image/image set name, URN, or VHD)
    type: string
    default: "-"

  - name: location
    displayName: Location (region)
    type: string
    default: "-"

  - name: vm_size
    displayName: VM size
    type: string
    default: "-"

  - name: collect_logs
    displayName: Collect logs from test VMs
    type: string
    default: failed
    values:
    - always
    - failed
    - no

  - name: keep_environment
    displayName: Keep the test VMs (do not delete them)
    type: string
    default: no
    values:
    - always
    - failed
    - no

trigger:
  - develop

pr: none

pool:
  vmImage: ubuntu-latest

jobs:
  - job: "ExecuteTests"

    steps:
      - task: UsePythonVersion@0
        displayName: "Set Python Version"
        inputs:
          versionSpec: '3.10'
          addToPath: true
          architecture: 'x64'

      # Extract the Azure cloud from the "connection_info" variable and store it in the "cloud" variable.
      # The cloud name is used as a suffix of the value for "connection_info" and comes after the last '-'.
      - bash: echo "##vso[task.setvariable variable=cloud]$(echo $CONNECTION_INFO | sed 's/^.*-//')"
        displayName: "Set Cloud type"

      - task: DownloadSecureFile@1
        name: downloadSshKey
        displayName: "Download SSH key"
        inputs:
          secureFile: 'id_rsa'

      - task: AzureKeyVault@2
        displayName: "Fetch connection info"
        inputs:
          azureSubscription: 'azuremanagement'
          KeyVaultName: '$(connection_info)'
          SecretsFilter: '*'

      - bash: $(Build.SourcesDirectory)/tests_e2e/pipeline/scripts/execute_tests.sh
        displayName: "Execute tests"
        continueOnError: true
        env:
          SUBSCRIPTION_ID: $(SUBSCRIPTION-ID)
          AZURE_CLIENT_ID: $(AZURE-CLIENT-ID)
          AZURE_CLIENT_SECRET: $(AZURE-CLIENT-SECRET)
          AZURE_TENANT_ID: $(AZURE-TENANT-ID)
          CR_USER: $(CR-USER)
          CR_SECRET: $(CR-SECRET)
          CLOUD: ${{ variables.cloud }}
          COLLECT_LOGS: ${{ parameters.collect_logs }}
          IMAGE: ${{ parameters.image }}
          KEEP_ENVIRONMENT: ${{ parameters.keep_environment }}
          LOCATION: ${{ parameters.location }}
          TEST_SUITES: ${{ parameters.test_suites }}
          VM_SIZE: ${{ parameters.vm_size }}

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: 'artifacts'
        displayName: 'Publish test artifacts'

      - task: PublishTestResults@2
        displayName: 'Publish test results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'runbook_logs/agent.junit.xml'
          searchFolder: $(Build.ArtifactStagingDirectory)
          failTaskOnFailedTests: true

