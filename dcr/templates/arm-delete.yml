parameters:
  - name: scenarios
    type: object

  - name: distros
    type: object

  - name: rgPrefix
    type: string

jobs:
  - job: "DeleteRG"
    dependsOn: "Wait"
    strategy:
      matrix:
        ${{ each distro in parameters.distros }}:
          ${{ each scenario in parameters.scenarios }}:
            ${{ format('{0}-{1}', distro.name, scenario) }}:
              scenarioName: ${{ scenario }}
              distroName: ${{ distro.name }}
              rgName: ${{ format('{0}-{1}-{2}', parameters.rgPrefix, scenario, distro.name) }}
              stageName: ${{ format('{0}-{1}', distro.name, scenario) }}
      maxParallel: 10

    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        condition: |
          or(
            eq(stageDependencies.Execute.CreateVM.outputs['setOutputVars.armDeployed'], 'true'),
            eq(stageDependencies.Execute.CreateVM.outputs[format('{0}.setOutputVars.armDeployed', variables.stageName)], 'true')
          )
        displayName: "Delete test RG"
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: '$(azureConnection)'
          subscriptionId: '$(subId)'
          action: 'DeleteRG'
          resourceGroupName: '$(rgName)'