# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  - name: scenarios
    type: object
    default:
#      - agent-bvt
#      - agent-bvt-module
#      - agent-bvt-pytest
#      - extension-telemetry-pipeline
      - ext-seq-multiple-dependencies

  - name: distros
    type: object
    default:
      - publisher: "Canonical"
        offer: "UbuntuServer"
        version: "latest"
        sku: "18.04-LTS"
        name: "ubuntu18"
#        setupPath: "dcr/distros/install_pip_packages.sh"

#      - publisher: "Debian"
#        offer: "debian-10"
#        sku: "10"
#        version: "latest"
#        name: "deb10"
##        setupPath: "dcr/distros/install_pip_packages.sh"
#
#      - publisher: "OpenLogic"
#        offer: "CentOS"
#        sku: "7_9"
#        version: "latest"
#        name: "cent79"
###
#      - publisher: "SUSE"
#        offer: "sles-15-sp2-basic"
#        sku: "gen1"
#        version: "latest"
#        name: "suse15"
##
#      - publisher: "RedHat"
#        offer: "RHEL"
#        sku: "7-RAW"
#        version: "latest"
#        name: "rhel7Raw"

trigger:
  - develop

#resources:
#  pipelines:
#    - pipeline: builderArtifacts
#      source: larohra.WALinuxAgent-builder
#      trigger: true

variables:
  vmName: 'larohra-simpleLinuxVM'
  adminUsername: 'larohra'
  SSH_PUBLIC: "$(sshPublicKey)" # set in GUI variables
  rgNamePrefix: "larohra-dcr-v2-test$(Build.BuildId)"

  # Cloud Data
  azureConnection: 'AzLinux DCR Public (8e037ad4-618f-4466-8bc8-5099d41ac15b)'
  subId: '8e037ad4-618f-4466-8bc8-5099d41ac15b'
  location: 'East US 2'

  fairfaxConn: 'VMGuestAgentAndExtensionsFairfax (8e5abcac-74f0-4955-9dfb-fe3fe36f8d19)'
  fairfaxSub: '8e5abcac-74f0-4955-9dfb-fe3fe36f8d19'
  fairfaxLocation: 'usgovarizona'

  mooncakeConn: 'Guest Agent Mooncake ( 557a8daa-8ac8-4caa-88e4-3b6f939978b9 )'
  mooncakeSub: '557a8daa-8ac8-4caa-88e4-3b6f939978b9'
  mooncakeLocation: 'china north 2'

pool: #larohra-dcrvmsspool
  vmImage: ubuntu-latest

stages:
  - stage: "Execute"
    variables:
      agentVersion: "9.9.9.9"

    jobs:
#      - job: "VerifyArtifacts"
#        # condition: succeeded("CreateVM")
#        steps:
#          - task: DownloadPipelineArtifact@2
#            inputs:
#              buildType: 'specific'
#              project: '2349ba76-ef20-4728-8958-572d04781d1f'
#              definition: '2'
#              specificBuildWithTriggering: true
#              buildVersionToDownload: 'latest'
#              targetPath: '$(Pipeline.Workspace)'
#
#          - script: |
#              ls -al "$(Pipeline.Workspace)"
#              ls -al "$(Pipeline.Workspace)/builderArtifacts"
#              cat $(Pipeline.Workspace)/builderArtifacts/temp.txt
#            displayName: "Check previous pipeline artifact"
#
#          - template: run-tests.yml@builderArtifacts
#            parameters:
#              ymlFilePath: ${{ format('{0}/builderArtifacts/run-tests.yml', variables['Pipeline.Workspace']) }}
      - template: 'dcr/templates/setup-vm-and-execute-tests.yml'
        parameters:
          scenarios:
            - ${{ parameters.scenarios }}
          distros:
            - ${{ parameters.distros }}
          rgPrefix: $(rgNamePrefix)

  - stage: "Cleanup"
    condition: succeededOrFailed()
    # variables:
    #   createVMPass: $[ stageDependencies.Setup.BuildAgent.outputs['agentZip.agentVersion'] ]
    jobs:
      - job: "Wait"
        # condition: succeeded("CreateVM")
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 50
            inputs:
              notifyUsers: 'larohra'
              onTimeout: 'resume'

      - template: dcr/templates/arm-delete.yml
        parameters:
          scenarios:
            - ${{ parameters.scenarios }}
          distros:
            - ${{ parameters.distros }}
          rgPrefix: $(rgNamePrefix)