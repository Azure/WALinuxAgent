# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    #Python26:
    #  python.version: '2.6'
    #  NOSEOPTS: "--verbose"
    #  SETUPOPTS: ""
    Python27:
      python.version: '2.7'
      NOSEOPTS: "--verbose --with-timer"
      SETUPOPTS: ""
    Python35:
      python.version: '3.5'
      NOSEOPTS: "--verbose --with-timer"
      SETUPOPTS: ""
    Python36:
      python.version: '3.6'
      NOSEOPTS: "--verbose --with-timer"
      SETUPOPTS: ""
    Python37:
      python.version: '3.7'
      NOSEOPTS: "--verbose --with-coverage --with-timer --cover-inclusive --cover-min-percentage=60 --cover-branches --cover-package=azurelinuxagent --cover-xml"
      SETUPOPTS: ""

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r test-requirements.txt
  displayName: 'Install dependencies'

- script: |
   echo $PATH
   nosetests $NOSEOPTS --attr '!requires_sudo' tests
   sudo env "PATH=$PATH" nosetests $NOSEOPTS --verbose --attr 'requires_sudo' tests
   if [ ! -z "$SETUPOPTS" ]; then /usr/bin/env python setup.py $SETUPOPTS; fi
  displayName: 'nosetest'
