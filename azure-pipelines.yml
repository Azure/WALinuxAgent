# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  - name: scenarios
    type: object
    default:
      - agent-bvt
      - agent-bvt-module

  - name: distros
    type: object
    default:
      - publisher: "Canonical"
        offer: "UbuntuServer"
        version: "latest"
        sku: "18.04-LTS"
        name: "ubuntu18"
        setupPath: "dcr/distros/apt_get_setup.sh"
      - publisher: "Debian"
        offer: "debian-10"
        sku: "10"
        version: "latest"
        name: "deb10"
        setupPath: "dcr/distros/apt_get_setup.sh"

#      - publisher: "OpenLogic"
#        offer: "CentOS"
#        sku: "7_9"
#        version: "latest"
#        name: "cent79"
#
#      - publisher: "SUSE"
#        offer: "sles-15-sp2-basic"
#        sku: "gen1"
#        version: "latest"
#        name: "suse15"
#
#      - publisher: "Debian"
#        offer: "debian-10"
#        sku: "10"
#        version: "latest"
#        name: "deb10"
#
#      - publisher: "RedHat"
#        offer: "RHEL"
#        sku: "8.2"
#        version: "latest"
#        name: "rhel82"

trigger:
  - develop

variables:
  vmName: 'larohra-simpleLinuxVM'
  adminUsername: 'larohra'
  SSH_PUBLIC: "$(sshPublicKey)" # set in GUI variables
  rgName: 'larohra-dcr-v2-test$(Build.BuildId)'

  # Scenario List

  listOfScenarios: "{
          'scenarioA': {
            'scenarioName': 'agent-bvt'
          }
        }"
  expandedListOfScenarios: "{
        'scenarioA': {
          'scenarioName': 'agent-bvt',
          'scenarioId': 1
        },
        'scenarioB': {
          'scenarioName': 'agent-bvt',
          'scenarioId': 2
        },
        'scenarioC': {
          'scenarioName': 'agent-bvt',
          'scenarioId': 3
        },
        'scenarioD': {
          'scenarioName': 'agent-bvt',
          'scenarioId': 4
        },
        'scenarioE': {
          'scenarioName': 'agent-bvt',
          'scenarioId': 5
        }
      }"

  # Cloud Data
  azureConnection: 'AzLinux DCR Public (8e037ad4-618f-4466-8bc8-5099d41ac15b)'
  subId: '8e037ad4-618f-4466-8bc8-5099d41ac15b'
  location: 'East US 2'

  fairfaxConn: 'VMGuestAgentAndExtensionsFairfax (8e5abcac-74f0-4955-9dfb-fe3fe36f8d19)'
  fairfaxSub: '8e5abcac-74f0-4955-9dfb-fe3fe36f8d19'
  fairfaxLocation: 'usgovarizona'

  mooncakeConn: 'Guest Agent Mooncake ( 557a8daa-8ac8-4caa-88e4-3b6f939978b9 )'
  mooncakeSub: '557a8daa-8ac8-4caa-88e4-3b6f939978b9'
  mooncakeLocation: 'china north 2'

pool: #larohra-dcrvmsspool
  vmImage: ubuntu-latest

stages:
  # - stage: "Setup"

  #   jobs:
  #
  #   - job: "PrintMetadata"
  #     steps:
  #       - script: |
  #           ip -4 -o address
  #           wget -O - -q icanhazip.com
  #         displayName: 'IP'

  - stage: "Execute"
    variables:
      agentVersion: "9.9.9.9"

    jobs:
      - template: 'dcr/templates/execute-tests.yml'
        parameters:
          scenarios:
            - ${{ parameters.scenarios }}
          distros:
            - ${{ parameters.distros }}

  #    - task: AzureCLI@2
  #    #   condition: succeeded('deployVM')
  #      displayName: "Get instance view"
  #      inputs:
  #        azureSubscription: $(azureConnection)
  #        scriptType: 'bash'
  #        scriptLocation: 'inlineScript'
  #        inlineScript: 'az vm get-instance-view --ids $(az vm list -g $(rgName) --query "[].id" -o tsv)'

  - stage: "Cleanup"
    condition: succeededOrFailed()
    # variables:
    #   createVMPass: $[ stageDependencies.Setup.BuildAgent.outputs['agentZip.agentVersion'] ]
    jobs:
      - job: "Wait"
        # condition: succeeded("CreateVM")
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 50
            inputs:
              notifyUsers: 'larohra'
              onTimeout: 'resume'

      - template: dcr/templates/arm-delete.yml
        parameters:
          scenarios:
            - ${{ parameters.scenarios }}
          distros:
            - ${{ parameters.distros }}